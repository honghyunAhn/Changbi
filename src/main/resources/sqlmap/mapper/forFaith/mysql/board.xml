<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="forFaith.dev.dao.BoardDAO">
	<!-- 게시판 Map  -->
	<resultMap id="boardMap" 				type="forFaith.dev.vo.BoardVO">
		<id		property="id"				column="ID" />
		<association property="regUser" 	column="REG_USER"	jdbcType="VARCHAR"	javaType="forFaith.dev.vo.MemberVO"	select="forFaith.dev.dao.BaseDAO.memberInfo" />
		<association property="updUser" 	column="UPD_USER"	jdbcType="VARCHAR"	javaType="forFaith.dev.vo.MemberVO"	select="forFaith.dev.dao.BaseDAO.memberInfo" />
	</resultMap>
	
	<!-- 댓글 Map -->
	<resultMap id="boardCommentMap" type="BoardCommentVO" autoMapping="true">
	 	<id property="id" column="ID"/>
	 	<result property="boardId" column="BOARD_ID"/>
	 	<result property="userId" column="USER_ID"/>
	 	<result property="comment" column="COMMENT"/>
	</resultMap>
	
	<!-- 게시글 Map  -->
	<resultMap id="noticeMap" 				type="forFaith.dev.vo.NoticeVO">
		<id		property="id"				column="ID" />
		<result property="board.id"			column="BOARD_ID" />		<!-- board 객체 ID만 저장 -->
		<result property="noticeCode.code"	column="NOTICE_CODE" />		<!-- Code 객체 ID만 저장 -->
		<result property="inquiryCode.code"	column="INQUIRY_CODE" />	<!-- Code 객체 ID만 저장 -->
		<association property="regUser" 	column="REG_USER"		jdbcType="VARCHAR"		javaType="forFaith.dev.vo.MemberVO"	select="forFaith.dev.dao.BaseDAO.memberInfo" />
		<association property="updUser" 	column="UPD_USER"		jdbcType="VARCHAR"		javaType="forFaith.dev.vo.MemberVO"	select="forFaith.dev.dao.BaseDAO.memberInfo" />
		<association property="uploadFile" 	column="UPLOAD_FILE"	javaType="forFaith.dev.vo.AttachFileVO"	select="forFaith.dev.dao.AttachFileDAO.attachFileInfo" />
	</resultMap>
	
	

	<!-- 게시판 리스트 조회 -->
	<select id="boardList" parameterType="forFaith.dev.vo.BoardVO" resultMap="boardMap">
		<if test='pagingYn=="Y"'>
		  	<include refid="forFaith.common.header"/>
	  	</if>
		SELECT ID, BOARD_TYPE, TITLE, ANSWER_YN, COMMENT_YN, RECOMMEND_YN, NONRECOMMEND_YN, SNS_YN
			 , LIST_AUTH, READ_AUTH, COMMENT_AUTH, WRITE_AUTH, FILE_CNT, FILE_SIZE
			 , ORDER_NUM, USE_YN, REG_DATE, UPD_DATE
	    FROM FF_BOARD 
		WHERE 1 = 1
		<if test="useYn != null and useYn != ''">
			AND USE_YN = #{useYn}
		</if>
		<if test="searchKeyword != null and searchKeyword != ''">
			AND TITLE LIKE CONCAT('%',#{searchKeyword},'%') 
		</if>
		<if test='pagingYn=="Y"'>
		  	<include refid="forFaith.common.footer"/>
	  	</if>
	</select>
	
	<!-- 게시판 리스트 총 갯수 -->
	<select id="boardTotalCnt" parameterType="forFaith.dev.vo.BoardVO" resultType="int">
		SELECT COUNT(ID)
		FROM FF_BOARD
		WHERE 1 = 1
		<if test="useYn != null and useYn != ''">
			AND USE_YN = #{useYn}
		</if>
		<if test="searchKeyword != null and searchKeyword != ''">
			AND TITLE LIKE CONCAT('%',#{searchKeyword},'%') 
		</if>
	</select>
	
	<!-- 게시판 상세 정보 -->
	<select id="boardInfo" parameterType="forFaith.dev.vo.BoardVO" resultMap="boardMap">
		SELECT ID, BOARD_TYPE, TITLE, ANSWER_YN, COMMENT_YN, RECOMMEND_YN, NONRECOMMEND_YN, SNS_YN
			 , LIST_AUTH, READ_AUTH, COMMENT_AUTH, WRITE_AUTH, FILE_CNT, FILE_SIZE
			 , ORDER_NUM, USE_YN, REG_DATE, UPD_DATE
	    FROM FF_BOARD
		WHERE ID = #{id}
	</select>
	
	<!-- 게시판 등록(ID 가 존재하지 않으면 insert 존재하면 update) insert 후 파라미터 객체에 ID값이 저장 됨 -->
	<insert id="boardReg" parameterType="forFaith.dev.vo.BoardVO">
		INSERT INTO FF_BOARD 
			( ID, TITLE, ANSWER_YN, COMMENT_YN, RECOMMEND_YN, NONRECOMMEND_YN, SNS_YN
			, LIST_AUTH, READ_AUTH, COMMENT_AUTH, WRITE_AUTH, FILE_CNT, FILE_SIZE
			, ORDER_NUM, REG_USER, REG_DATE, UPD_USER, UPD_DATE )
		VALUES
			( #{id}, #{title}, #{answerYn}, #{commentYn}, #{recommendYn}, #{nonrecommendYn}, #{snsYn}
			, #{listAuth}, #{readAuth}, #{commentAuth}, #{writeAuth}, #{fileCnt}, #{fileSize}
			, #{orderNum}, #{regUser.id}, DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'), #{updUser.id}, DATE_FORMAT(NOW(),'%Y%m%d%H%i%s') )
		ON DUPLICATE KEY UPDATE
			TITLE	      	= VALUES(TITLE),
			ANSWER_YN	 	= VALUES(ANSWER_YN),
			COMMENT_YN	    = VALUES(COMMENT_YN),
	        RECOMMEND_YN    = VALUES(RECOMMEND_YN),
			NONRECOMMEND_YN = VALUES(NONRECOMMEND_YN),
			SNS_YN          = VALUES(SNS_YN),
			LIST_AUTH       = VALUES(LIST_AUTH),
			READ_AUTH       = VALUES(READ_AUTH),
			COMMENT_AUTH    = VALUES(COMMENT_AUTH),
			WRITE_AUTH      = VALUES(WRITE_AUTH),
			FILE_CNT        = VALUES(FILE_CNT),
			FILE_SIZE       = VALUES(FILE_SIZE),
			ORDER_NUM		= VALUES(ORDER_NUM),
			UPD_USER		= VALUES(UPD_USER),
			UPD_DATE		= VALUES(UPD_DATE)
	</insert>	
	
	<!-- 게시판 삭제 -->
	<update id="boardDel" parameterType="forFaith.dev.vo.BoardVO">
		DELETE FROM FF_BOARD
		WHERE ID = #{id}
	</update>
	
	<!-- 게시판 사용 여부 상태 변경 -->
	<update id="boardUseChange" parameterType="list">
		UPDATE FF_BOARD
		SET USE_YN = IF(USE_YN = 'N', 'Y', 'N')
		  , UPD_USER = #{list[0].updUser.id}
		  , UPD_DATE = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		WHERE ID IN ( <foreach collection="list" item="board" index="index" separator=" , ">#{board.id}</foreach> )
	</update>
	
	<!-- 게시물 리스트 조회 -->
	<select id="noticeList" parameterType="forFaith.dev.vo.NoticeVO" resultMap="noticeMap">
		<if test='pagingYn=="Y"'>
		  	<include refid="forFaith.common.header"/>
	  	</if>
		SELECT ID, LANG, BOARD_ID, NOTICE_CODE, INQUIRY_CODE, TITLE, NAME, PHONE, EMAIL
			 , COMMENT, HITS, RECOMMEND, NONRECOMMEND, SHARE
			 , USE_YN, REG_DATE, UPD_DATE
	    FROM FF_NOTICE
	    WHERE 1 = 1
	    <if test="useYn != null and useYn != ''">
			AND USE_YN = #{useYn}
		</if>
		<if test="board.id != null and board.id != ''">
			AND BOARD_ID = #{board.id}  
		</if>
		<if test="searchKeyword != null and searchKeyword != ''">
			<choose>
				<when test="searchCondition == 'all'">
					AND ( TITLE LIKE CONCAT('%',#{searchKeyword},'%') 
					OR	NAME LIKE CONCAT('%',#{searchKeyword},'%') 
					OR	COMMENT LIKE CONCAT('%',#{searchKeyword},'%') )
				</when>
				<when test="searchCondition == 'title'">
					AND TITLE LIKE CONCAT('%',#{searchKeyword},'%')
				</when>
				<when test="searchCondition == 'name'">
					AND NAME LIKE CONCAT('%',#{searchKeyword},'%')
				</when>				
				<when test="searchCondition == 'comment'">
					AND COMMENT LIKE CONCAT('%',#{searchKeyword},'%')
				</when>
			</choose>
		</if>
		ORDER BY ID DESC
		<if test='pagingYn=="Y"'>
		  	<include refid="forFaith.common.footer"/>
	  	</if>
	</select>
	
	<!-- 게시물 리스트 총 갯수 -->
	<select id="noticeTotalCnt" parameterType="forFaith.dev.vo.NoticeVO" resultType="int">
		SELECT COUNT(ID) 
	    FROM FF_NOTICE
	    WHERE 1 = 1
	    <if test="useYn != null and useYn != ''">
			AND USE_YN = #{useYn}
		</if>
		<if test="board.id != null and board.id != ''">
			AND BOARD_ID = #{board.id}  
		</if>
		<if test="searchKeyword != null and searchKeyword != ''">
			<choose>
				<when test="searchCondition == 'all'">
					AND ( TITLE LIKE CONCAT('%',#{searchKeyword},'%') 
					OR	NAME LIKE CONCAT('%',#{searchKeyword},'%') 
					OR	COMMENT LIKE CONCAT('%',#{searchKeyword},'%') )
				</when>
				<when test="searchCondition == 'title'">
					AND TITLE LIKE CONCAT('%',#{searchKeyword},'%')
				</when>
				<when test="searchCondition == 'name'">
					AND NAME LIKE CONCAT('%',#{searchKeyword},'%')
				</when>				
				<when test="searchCondition == 'comment'">
					AND COMMENT LIKE CONCAT('%',#{searchKeyword},'%')
				</when>
			</choose>
		</if>
	</select>
	
	<!-- 게시물 상세정보 -->		
	<select id="noticeInfo" parameterType="forFaith.dev.vo.NoticeVO" resultMap="noticeMap">
		SELECT ID, LANG, BOARD_ID, UPLOAD_FILE, NOTICE_CODE, INQUIRY_CODE, TITLE, NAME, PHONE, EMAIL
			 , COMMENT, HITS, RECOMMEND, NONRECOMMEND, SHARE
			 , USE_YN, REG_DATE, UPD_DATE
	    FROM FF_NOTICE
		WHERE ID = #{id}
	</select>
	
	<!-- 게시물 저장 -->
	<insert id="noticeReg" parameterType="forFaith.dev.vo.NoticeVO" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO FF_NOTICE
			( ID, LANG, BOARD_ID, UPLOAD_FILE, NOTICE_CODE, INQUIRY_CODE, TITLE, NAME, PHONE, EMAIL, COMMENT
			, ORDER_NUM, REG_USER, REG_DATE, UPD_USER, UPD_DATE )
		VALUES
			( #{id}, #{lang}, #{board.id}, #{uploadFile.fileId}, #{noticeCode.code}, #{inquiryCode.code}, #{title}, #{name}, #{phone}, #{email}, #{comment}
			, #{orderNum}, #{regUser.id}, DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'), #{updUser.id}, DATE_FORMAT(NOW(),'%Y%m%d%H%i%s') )
		ON DUPLICATE KEY UPDATE
			LANG		= VALUES(LANG),
			BOARD_ID	= VALUES(BOARD_ID),
			UPLOAD_FILE	= VALUES(UPLOAD_FILE),
			NOTICE_CODE = VALUES(NOTICE_CODE),
			INQUIRY_CODE= VALUES(INQUIRY_CODE),
			TITLE       = VALUES(TITLE),
			NAME        = VALUES(NAME),
			PHONE       = VALUES(PHONE),
			EMAIL       = VALUES(EMAIL),
			COMMENT     = VALUES(COMMENT),
			ORDER_NUM	= VALUES(ORDER_NUM),
			UPD_USER	= VALUES(UPD_USER),
			UPD_DATE	= VALUES(UPD_DATE)
	</insert>
	
	<!-- 게시물 삭제 -->
	<update id="noticeDel" parameterType="forFaith.dev.vo.NoticeVO">
		DELETE FROM FF_NOTICE
		WHERE ID = #{id}
	</update>
	
	<!-- 게시물 사용 여부 상태 변경 -->
	<update id="noticeUseChange" parameterType="list">
		UPDATE FF_NOTICE
		SET USE_YN = IF(USE_YN = 'N', 'Y', 'N')
		  , UPD_USER = #{list[0].updUser.id}
		  , UPD_DATE = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		WHERE ID IN ( <foreach collection="list" item="notice" index="index" separator=" , ">#{notice.id}</foreach> )
	</update>
	
	
</mapper>